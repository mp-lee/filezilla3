# Makefile.in generated by automake 1.15 from Makefile.am.
# src/engine/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/filezilla
pkgincludedir = $(includedir)/filezilla
pkglibdir = $(libdir)/filezilla
pkglibexecdir = $(libexecdir)/filezilla
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src/engine
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_define.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/check_atomic.m4 \
	$(top_srcdir)/m4/check_clock_gettime.m4 \
	$(top_srcdir)/m4/check_libc++.m4 \
	$(top_srcdir)/m4/check_steady_clock.m4 \
	$(top_srcdir)/m4/check_thread_local.m4 \
	$(top_srcdir)/m4/check_time.m4 $(top_srcdir)/m4/cppunit.m4 \
	$(top_srcdir)/m4/cxx_compile_stdcxx_14.m4 \
	$(top_srcdir)/m4/d-type.m4 \
	$(top_srcdir)/m4/fz_check_pugixml.m4 \
	$(top_srcdir)/m4/fz_checkversion.m4 \
	$(top_srcdir)/m4/icopyhookw.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/map_emplace.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/m4/wxwin.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_DATA) \
	$(noinst_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libengine_a_AR = $(AR) $(ARFLAGS)
libengine_a_LIBADD =
am_libengine_a_OBJECTS = libengine_a-backend.$(OBJEXT) \
	libengine_a-commands.$(OBJEXT) \
	libengine_a-ControlSocket.$(OBJEXT) \
	libengine_a-directorycache.$(OBJEXT) \
	libengine_a-directorylisting.$(OBJEXT) \
	libengine_a-directorylistingparser.$(OBJEXT) \
	libengine_a-engine_context.$(OBJEXT) \
	libengine_a-engineprivate.$(OBJEXT) \
	libengine_a-externalipresolver.$(OBJEXT) \
	libengine_a-FileZillaEngine.$(OBJEXT) \
	libengine_a-ftpcontrolsocket.$(OBJEXT) \
	libengine_a-httpcontrolsocket.$(OBJEXT) \
	libengine_a-iothread.$(OBJEXT) \
	libengine_a-local_path.$(OBJEXT) libengine_a-logging.$(OBJEXT) \
	libengine_a-misc.$(OBJEXT) libengine_a-notification.$(OBJEXT) \
	libengine_a-option_change_event_handler.$(OBJEXT) \
	libengine_a-pathcache.$(OBJEXT) libengine_a-proxy.$(OBJEXT) \
	libengine_a-ratelimiter.$(OBJEXT) libengine_a-rtt.$(OBJEXT) \
	libengine_a-server.$(OBJEXT) libengine_a-serverpath.$(OBJEXT) \
	libengine_a-servercapabilities.$(OBJEXT) \
	libengine_a-sftpcontrolsocket.$(OBJEXT) \
	libengine_a-sizeformatting_base.$(OBJEXT) \
	libengine_a-socket.$(OBJEXT) \
	libengine_a-storjcontrolsocket.$(OBJEXT) \
	libengine_a-tlssocket.$(OBJEXT) \
	libengine_a-transfersocket.$(OBJEXT) libengine_a-uri.$(OBJEXT)
libengine_a_OBJECTS = $(am_libengine_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libengine_a_SOURCES)
DIST_SOURCES = $(libengine_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_noinst_DATA)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/codesquid/src/fz/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/codesquid/src/fz/config/missing autoconf
AUTOHEADER = ${SHELL} /home/codesquid/src/fz/config/missing autoheader
AUTOMAKE = ${SHELL} /home/codesquid/src/fz/config/missing automake-1.15
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = gcc -E
CPPFLAGS = -I/home/codesquid/prefix/include
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = /usr/bin/cppunit-config
CPPUNIT_LIBS = -L/usr/lib/x86_64-linux-gnu -lcppunit -ldl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -fsanitize=undefined -fsanitize=address -Wall -g
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FILEZILLA_LINGUAS = an ar bg_BG ca ca_ES@valencia co cs_CZ cy da de el es et eu fa_IR fi_FI fr gl_ES he_IL hr hu_HU hy id_ID is it ja_JP ka kab km_KH ko_KR ku ky lo_LA lt_LT lv_LV mk_MK nb_NO ne nl nn_NO oc pl_PL pt_BR pt_PT ro_RO ru sk_SK sl_SI sr sv th_TH tr uk_UA vi_VN zh_CN zh_TW
FILEZILLA_LINGUAS_MO = an.mo ar.mo bg_BG.mo ca.mo ca_ES@valencia.mo co.mo cs_CZ.mo cy.mo da.mo de.mo el.mo es.mo et.mo eu.mo fa_IR.mo fi_FI.mo fr.mo gl_ES.mo he_IL.mo hr.mo hu_HU.mo hy.mo id_ID.mo is.mo it.mo ja_JP.mo ka.mo kab.mo km_KH.mo ko_KR.mo ku.mo ky.mo lo_LA.mo lt_LT.mo lv_LV.mo mk_MK.mo nb_NO.mo ne.mo nl.mo nn_NO.mo oc.mo pl_PL.mo pt_BR.mo pt_PT.mo ro_RO.mo ru.mo sk_SK.mo sl_SI.mo sr.mo sv.mo th_TH.mo tr.mo uk_UA.mo vi_VN.mo zh_CN.mo zh_TW.mo
FILEZILLA_LINGUAS_PO = $(srcdir)/an.po $(srcdir)/ar.po $(srcdir)/bg_BG.po $(srcdir)/ca.po $(srcdir)/ca_ES@valencia.po $(srcdir)/co.po $(srcdir)/cs_CZ.po $(srcdir)/cy.po $(srcdir)/da.po $(srcdir)/de.po $(srcdir)/el.po $(srcdir)/es.po $(srcdir)/et.po $(srcdir)/eu.po $(srcdir)/fa_IR.po $(srcdir)/fi_FI.po $(srcdir)/fr.po $(srcdir)/gl_ES.po $(srcdir)/he_IL.po $(srcdir)/hr.po $(srcdir)/hu_HU.po $(srcdir)/hy.po $(srcdir)/id_ID.po $(srcdir)/is.po $(srcdir)/it.po $(srcdir)/ja_JP.po $(srcdir)/ka.po $(srcdir)/kab.po $(srcdir)/km_KH.po $(srcdir)/ko_KR.po $(srcdir)/ku.po $(srcdir)/ky.po $(srcdir)/lo_LA.po $(srcdir)/lt_LT.po $(srcdir)/lv_LV.po $(srcdir)/mk_MK.po $(srcdir)/nb_NO.po $(srcdir)/ne.po $(srcdir)/nl.po $(srcdir)/nn_NO.po $(srcdir)/oc.po $(srcdir)/pl_PL.po $(srcdir)/pt_BR.po $(srcdir)/pt_PT.po $(srcdir)/ro_RO.po $(srcdir)/ru.po $(srcdir)/sk_SK.po $(srcdir)/sl_SI.po $(srcdir)/sr.po $(srcdir)/sv.po $(srcdir)/th_TH.po $(srcdir)/tr.po $(srcdir)/uk_UA.po $(srcdir)/vi_VN.po $(srcdir)/zh_CN.po $(srcdir)/zh_TW.po
FILEZILLA_LINGUAS_PO_NEW = an.po.new ar.po.new bg_BG.po.new ca.po.new ca_ES@valencia.po.new co.po.new cs_CZ.po.new cy.po.new da.po.new de.po.new el.po.new es.po.new et.po.new eu.po.new fa_IR.po.new fi_FI.po.new fr.po.new gl_ES.po.new he_IL.po.new hr.po.new hu_HU.po.new hy.po.new id_ID.po.new is.po.new it.po.new ja_JP.po.new ka.po.new kab.po.new km_KH.po.new ko_KR.po.new ku.po.new ky.po.new lo_LA.po.new lt_LT.po.new lv_LV.po.new mk_MK.po.new nb_NO.po.new ne.po.new nl.po.new nn_NO.po.new oc.po.new pl_PL.po.new pt_BR.po.new pt_PT.po.new ro_RO.po.new ru.po.new sk_SK.po.new sl_SI.po.new sr.po.new sv.po.new th_TH.po.new tr.po.new uk_UA.po.new vi_VN.po.new zh_CN.po.new zh_TW.po.new
GREP = /bin/grep
HAVE_CXX14 = 
IDN_LIB = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/home/codesquid/prefix/lib -fsanitize=undefined -fsanitize=address
LIBDBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include
LIBDBUS_LIBS = -ldbus-1
LIBFILEZILLA_CFLAGS = -I/home/codesquid/prefix/include
LIBFILEZILLA_LIBS = -L/home/codesquid/prefix/lib -lfilezilla -lpthread
LIBGNUTLS_CFLAGS = -I/home/codesquid/prefix/include
LIBGNUTLS_LIBS = -L/home/codesquid/prefix/lib -lgnutls
LIBGTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2
LIBGTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lfontconfig -lfreetype
LIBOBJS = 
LIBS = 
LIBSQLITE3_CFLAGS = 
LIBSQLITE3_LIBS = -lsqlite3
LIBSTORJ_CFLAGS = -I/home/codesquid/prefix/include -I/usr/include/neon -I/usr/include/json-c
LIBSTORJ_LIBS = -L/home/codesquid/prefix/lib -lstorj -lneon-gnutls -lnettle -ljson-c -luv -lrt -lpthread -lnsl -ldl
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/codesquid/src/fz/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NETTLE_CFLAGS = 
NETTLE_LIBS = -lnettle
NM = /usr/bin/nm -B
NMEDIT = 
NSIS_64BIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = filezilla
PACKAGE_BUGREPORT = tim.kosse@filezilla-project.org
PACKAGE_NAME = FileZilla
PACKAGE_STRING = FileZilla 3.24.0
PACKAGE_TARNAME = filezilla
PACKAGE_URL = https://filezilla-project.org/
PACKAGE_VERSION = 3.24.0
PACKAGE_VERSION_MAJOR = 3
PACKAGE_VERSION_MICRO = 0
PACKAGE_VERSION_MINOR = 24
PACKAGE_VERSION_NANO = 0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /home/codesquid/prefix/lib/pkgconfig
PUGIXML_LIBS = -lpugixml
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 3.24.0
WINDRES = 
WINDRESFLAGS = 
WXRC = /home/codesquid/prefix/bin/wxrc
WX_CFLAGS = -I/home/codesquid/prefix/lib/wx/include/gtk2-unicode-3.0 -I/home/codesquid/prefix/include/wx-3.0 -D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXGTK__ -pthread
WX_CFLAGS_ONLY = -pthread
WX_CONFIG_PATH = /home/codesquid/prefix/bin/wx-config
WX_CONFIG_WITH_ARGS = /home/codesquid/prefix/bin/wx-config  --unicode=yes --universal=no
WX_CPPFLAGS = -I/home/codesquid/prefix/lib/wx/include/gtk2-unicode-3.0 -I/home/codesquid/prefix/include/wx-3.0 -D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXGTK__
WX_CXXFLAGS = -I/home/codesquid/prefix/lib/wx/include/gtk2-unicode-3.0 -I/home/codesquid/prefix/include/wx-3.0 -D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXGTK__ -pthread
WX_CXXFLAGS_ONLY = 
WX_LIBS = -L/home/codesquid/prefix/lib -pthread   -lwx_gtk2u_aui-3.0 -lwx_gtk2u_xrc-3.0 -lwx_gtk2u_adv-3.0 -lwx_gtk2u_core-3.0 -lwx_baseu_xml-3.0 -lwx_baseu-3.0 
WX_LIBS_STATIC = -L/home/codesquid/prefix/lib -pthread   /home/codesquid/prefix/lib/libwx_gtk2u_aui-3.0.a /home/codesquid/prefix/lib/libwx_gtk2u_xrc-3.0.a /home/codesquid/prefix/lib/libwx_gtk2u_adv-3.0.a /home/codesquid/prefix/lib/libwx_gtk2u_core-3.0.a /home/codesquid/prefix/lib/libwx_baseu_xml-3.0.a /home/codesquid/prefix/lib/libwx_baseu-3.0.a -lgthread-2.0 -pthread -lX11 -lXxf86vm -lSM -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lpangoft2-1.0 -lpango-1.0 -lfontconfig -lfreetype -lnotify -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lpng -ljpeg -ltiff -lexpat -lwxregexu-3.0 -lz -ldl -lm 
WX_RESCOMP = 
WX_VERSION = 3.0.3
WX_VERSION_MAJOR = 3
WX_VERSION_MICRO = 3
WX_VERSION_MINOR = 0
abs_builddir = /home/codesquid/src/fz/src/engine
abs_srcdir = /home/codesquid/src/fz/src/engine
abs_top_builddir = /home/codesquid/src/fz
abs_top_srcdir = /home/codesquid/src/fz
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/codesquid/src/fz/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
msgfmt = /usr/bin/msgfmt
msgmerge = /usr/bin/msgmerge
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/codesquid/prefix
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs = 
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
xdgopen = /usr/bin/xdg-open
xgettext = /usr/bin/xgettext
noinst_LIBRARIES = libengine.a
libengine_a_CPPFLAGS = -I$(srcdir)/../include $(LIBFILEZILLA_CFLAGS) \
	$(LIBGNUTLS_CFLAGS) $(WX_CPPFLAGS)
libengine_a_CXXFLAGS = $(WX_CXXFLAGS_ONLY)
libengine_a_CFLAGS = $(WX_CFLAGS_ONLY)
libengine_a_SOURCES = \
		backend.cpp \
		commands.cpp \
		ControlSocket.cpp \
		directorycache.cpp \
		directorylisting.cpp \
		directorylistingparser.cpp \
		engine_context.cpp \
		engineprivate.cpp \
		externalipresolver.cpp \
		FileZillaEngine.cpp \
		ftpcontrolsocket.cpp \
		httpcontrolsocket.cpp \
		iothread.cpp \
		local_path.cpp \
		logging.cpp \
		misc.cpp \
		notification.cpp \
		option_change_event_handler.cpp \
		pathcache.cpp \
		proxy.cpp \
		ratelimiter.cpp \
		rtt.cpp \
		server.cpp serverpath.cpp\
		servercapabilities.cpp \
		sftpcontrolsocket.cpp \
		sizeformatting_base.cpp \
		socket.cpp \
		storjcontrolsocket.cpp \
		tlssocket.cpp \
		transfersocket.cpp \
		uri.cpp

noinst_HEADERS = backend.h \
		ControlSocket.h \
		directorycache.h \
		directorylistingparser.h \
		engineprivate.h \
		filezilla.h \
		ftpcontrolsocket.h \
		httpcontrolsocket.h \
		iothread.h \
		logging_private.h \
		pathcache.h \
		proxy.h \
		ratelimiter.h \
		rtt.h \
		servercapabilities.h \
		sftpcontrolsocket.h \
		storjcontrolsocket.h \
		tlssocket.h \
		transfersocket.h

dist_noinst_DATA = engine.vcxproj
CLEANFILES = filezilla.h.gch
#BUILT_SOURCES = filezilla.h.gch
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/engine/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/engine/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libengine.a: $(libengine_a_OBJECTS) $(libengine_a_DEPENDENCIES) $(EXTRA_libengine_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libengine.a
	$(AM_V_AR)$(libengine_a_AR) libengine.a $(libengine_a_OBJECTS) $(libengine_a_LIBADD)
	$(AM_V_at)$(RANLIB) libengine.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libengine_a-ControlSocket.Po
include ./$(DEPDIR)/libengine_a-FileZillaEngine.Po
include ./$(DEPDIR)/libengine_a-backend.Po
include ./$(DEPDIR)/libengine_a-commands.Po
include ./$(DEPDIR)/libengine_a-directorycache.Po
include ./$(DEPDIR)/libengine_a-directorylisting.Po
include ./$(DEPDIR)/libengine_a-directorylistingparser.Po
include ./$(DEPDIR)/libengine_a-engine_context.Po
include ./$(DEPDIR)/libengine_a-engineprivate.Po
include ./$(DEPDIR)/libengine_a-externalipresolver.Po
include ./$(DEPDIR)/libengine_a-ftpcontrolsocket.Po
include ./$(DEPDIR)/libengine_a-httpcontrolsocket.Po
include ./$(DEPDIR)/libengine_a-iothread.Po
include ./$(DEPDIR)/libengine_a-local_path.Po
include ./$(DEPDIR)/libengine_a-logging.Po
include ./$(DEPDIR)/libengine_a-misc.Po
include ./$(DEPDIR)/libengine_a-notification.Po
include ./$(DEPDIR)/libengine_a-option_change_event_handler.Po
include ./$(DEPDIR)/libengine_a-pathcache.Po
include ./$(DEPDIR)/libengine_a-proxy.Po
include ./$(DEPDIR)/libengine_a-ratelimiter.Po
include ./$(DEPDIR)/libengine_a-rtt.Po
include ./$(DEPDIR)/libengine_a-server.Po
include ./$(DEPDIR)/libengine_a-servercapabilities.Po
include ./$(DEPDIR)/libengine_a-serverpath.Po
include ./$(DEPDIR)/libengine_a-sftpcontrolsocket.Po
include ./$(DEPDIR)/libengine_a-sizeformatting_base.Po
include ./$(DEPDIR)/libengine_a-socket.Po
include ./$(DEPDIR)/libengine_a-storjcontrolsocket.Po
include ./$(DEPDIR)/libengine_a-tlssocket.Po
include ./$(DEPDIR)/libengine_a-transfersocket.Po
include ./$(DEPDIR)/libengine_a-uri.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libengine_a-backend.o: backend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-backend.o -MD -MP -MF $(DEPDIR)/libengine_a-backend.Tpo -c -o libengine_a-backend.o `test -f 'backend.cpp' || echo '$(srcdir)/'`backend.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-backend.Tpo $(DEPDIR)/libengine_a-backend.Po
#	$(AM_V_CXX)source='backend.cpp' object='libengine_a-backend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-backend.o `test -f 'backend.cpp' || echo '$(srcdir)/'`backend.cpp

libengine_a-backend.obj: backend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-backend.obj -MD -MP -MF $(DEPDIR)/libengine_a-backend.Tpo -c -o libengine_a-backend.obj `if test -f 'backend.cpp'; then $(CYGPATH_W) 'backend.cpp'; else $(CYGPATH_W) '$(srcdir)/backend.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-backend.Tpo $(DEPDIR)/libengine_a-backend.Po
#	$(AM_V_CXX)source='backend.cpp' object='libengine_a-backend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-backend.obj `if test -f 'backend.cpp'; then $(CYGPATH_W) 'backend.cpp'; else $(CYGPATH_W) '$(srcdir)/backend.cpp'; fi`

libengine_a-commands.o: commands.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-commands.o -MD -MP -MF $(DEPDIR)/libengine_a-commands.Tpo -c -o libengine_a-commands.o `test -f 'commands.cpp' || echo '$(srcdir)/'`commands.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-commands.Tpo $(DEPDIR)/libengine_a-commands.Po
#	$(AM_V_CXX)source='commands.cpp' object='libengine_a-commands.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-commands.o `test -f 'commands.cpp' || echo '$(srcdir)/'`commands.cpp

libengine_a-commands.obj: commands.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-commands.obj -MD -MP -MF $(DEPDIR)/libengine_a-commands.Tpo -c -o libengine_a-commands.obj `if test -f 'commands.cpp'; then $(CYGPATH_W) 'commands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-commands.Tpo $(DEPDIR)/libengine_a-commands.Po
#	$(AM_V_CXX)source='commands.cpp' object='libengine_a-commands.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-commands.obj `if test -f 'commands.cpp'; then $(CYGPATH_W) 'commands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands.cpp'; fi`

libengine_a-ControlSocket.o: ControlSocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-ControlSocket.o -MD -MP -MF $(DEPDIR)/libengine_a-ControlSocket.Tpo -c -o libengine_a-ControlSocket.o `test -f 'ControlSocket.cpp' || echo '$(srcdir)/'`ControlSocket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-ControlSocket.Tpo $(DEPDIR)/libengine_a-ControlSocket.Po
#	$(AM_V_CXX)source='ControlSocket.cpp' object='libengine_a-ControlSocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-ControlSocket.o `test -f 'ControlSocket.cpp' || echo '$(srcdir)/'`ControlSocket.cpp

libengine_a-ControlSocket.obj: ControlSocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-ControlSocket.obj -MD -MP -MF $(DEPDIR)/libengine_a-ControlSocket.Tpo -c -o libengine_a-ControlSocket.obj `if test -f 'ControlSocket.cpp'; then $(CYGPATH_W) 'ControlSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/ControlSocket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-ControlSocket.Tpo $(DEPDIR)/libengine_a-ControlSocket.Po
#	$(AM_V_CXX)source='ControlSocket.cpp' object='libengine_a-ControlSocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-ControlSocket.obj `if test -f 'ControlSocket.cpp'; then $(CYGPATH_W) 'ControlSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/ControlSocket.cpp'; fi`

libengine_a-directorycache.o: directorycache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-directorycache.o -MD -MP -MF $(DEPDIR)/libengine_a-directorycache.Tpo -c -o libengine_a-directorycache.o `test -f 'directorycache.cpp' || echo '$(srcdir)/'`directorycache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-directorycache.Tpo $(DEPDIR)/libengine_a-directorycache.Po
#	$(AM_V_CXX)source='directorycache.cpp' object='libengine_a-directorycache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-directorycache.o `test -f 'directorycache.cpp' || echo '$(srcdir)/'`directorycache.cpp

libengine_a-directorycache.obj: directorycache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-directorycache.obj -MD -MP -MF $(DEPDIR)/libengine_a-directorycache.Tpo -c -o libengine_a-directorycache.obj `if test -f 'directorycache.cpp'; then $(CYGPATH_W) 'directorycache.cpp'; else $(CYGPATH_W) '$(srcdir)/directorycache.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-directorycache.Tpo $(DEPDIR)/libengine_a-directorycache.Po
#	$(AM_V_CXX)source='directorycache.cpp' object='libengine_a-directorycache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-directorycache.obj `if test -f 'directorycache.cpp'; then $(CYGPATH_W) 'directorycache.cpp'; else $(CYGPATH_W) '$(srcdir)/directorycache.cpp'; fi`

libengine_a-directorylisting.o: directorylisting.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-directorylisting.o -MD -MP -MF $(DEPDIR)/libengine_a-directorylisting.Tpo -c -o libengine_a-directorylisting.o `test -f 'directorylisting.cpp' || echo '$(srcdir)/'`directorylisting.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-directorylisting.Tpo $(DEPDIR)/libengine_a-directorylisting.Po
#	$(AM_V_CXX)source='directorylisting.cpp' object='libengine_a-directorylisting.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-directorylisting.o `test -f 'directorylisting.cpp' || echo '$(srcdir)/'`directorylisting.cpp

libengine_a-directorylisting.obj: directorylisting.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-directorylisting.obj -MD -MP -MF $(DEPDIR)/libengine_a-directorylisting.Tpo -c -o libengine_a-directorylisting.obj `if test -f 'directorylisting.cpp'; then $(CYGPATH_W) 'directorylisting.cpp'; else $(CYGPATH_W) '$(srcdir)/directorylisting.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-directorylisting.Tpo $(DEPDIR)/libengine_a-directorylisting.Po
#	$(AM_V_CXX)source='directorylisting.cpp' object='libengine_a-directorylisting.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-directorylisting.obj `if test -f 'directorylisting.cpp'; then $(CYGPATH_W) 'directorylisting.cpp'; else $(CYGPATH_W) '$(srcdir)/directorylisting.cpp'; fi`

libengine_a-directorylistingparser.o: directorylistingparser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-directorylistingparser.o -MD -MP -MF $(DEPDIR)/libengine_a-directorylistingparser.Tpo -c -o libengine_a-directorylistingparser.o `test -f 'directorylistingparser.cpp' || echo '$(srcdir)/'`directorylistingparser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-directorylistingparser.Tpo $(DEPDIR)/libengine_a-directorylistingparser.Po
#	$(AM_V_CXX)source='directorylistingparser.cpp' object='libengine_a-directorylistingparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-directorylistingparser.o `test -f 'directorylistingparser.cpp' || echo '$(srcdir)/'`directorylistingparser.cpp

libengine_a-directorylistingparser.obj: directorylistingparser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-directorylistingparser.obj -MD -MP -MF $(DEPDIR)/libengine_a-directorylistingparser.Tpo -c -o libengine_a-directorylistingparser.obj `if test -f 'directorylistingparser.cpp'; then $(CYGPATH_W) 'directorylistingparser.cpp'; else $(CYGPATH_W) '$(srcdir)/directorylistingparser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-directorylistingparser.Tpo $(DEPDIR)/libengine_a-directorylistingparser.Po
#	$(AM_V_CXX)source='directorylistingparser.cpp' object='libengine_a-directorylistingparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-directorylistingparser.obj `if test -f 'directorylistingparser.cpp'; then $(CYGPATH_W) 'directorylistingparser.cpp'; else $(CYGPATH_W) '$(srcdir)/directorylistingparser.cpp'; fi`

libengine_a-engine_context.o: engine_context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-engine_context.o -MD -MP -MF $(DEPDIR)/libengine_a-engine_context.Tpo -c -o libengine_a-engine_context.o `test -f 'engine_context.cpp' || echo '$(srcdir)/'`engine_context.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-engine_context.Tpo $(DEPDIR)/libengine_a-engine_context.Po
#	$(AM_V_CXX)source='engine_context.cpp' object='libengine_a-engine_context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-engine_context.o `test -f 'engine_context.cpp' || echo '$(srcdir)/'`engine_context.cpp

libengine_a-engine_context.obj: engine_context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-engine_context.obj -MD -MP -MF $(DEPDIR)/libengine_a-engine_context.Tpo -c -o libengine_a-engine_context.obj `if test -f 'engine_context.cpp'; then $(CYGPATH_W) 'engine_context.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_context.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-engine_context.Tpo $(DEPDIR)/libengine_a-engine_context.Po
#	$(AM_V_CXX)source='engine_context.cpp' object='libengine_a-engine_context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-engine_context.obj `if test -f 'engine_context.cpp'; then $(CYGPATH_W) 'engine_context.cpp'; else $(CYGPATH_W) '$(srcdir)/engine_context.cpp'; fi`

libengine_a-engineprivate.o: engineprivate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-engineprivate.o -MD -MP -MF $(DEPDIR)/libengine_a-engineprivate.Tpo -c -o libengine_a-engineprivate.o `test -f 'engineprivate.cpp' || echo '$(srcdir)/'`engineprivate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-engineprivate.Tpo $(DEPDIR)/libengine_a-engineprivate.Po
#	$(AM_V_CXX)source='engineprivate.cpp' object='libengine_a-engineprivate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-engineprivate.o `test -f 'engineprivate.cpp' || echo '$(srcdir)/'`engineprivate.cpp

libengine_a-engineprivate.obj: engineprivate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-engineprivate.obj -MD -MP -MF $(DEPDIR)/libengine_a-engineprivate.Tpo -c -o libengine_a-engineprivate.obj `if test -f 'engineprivate.cpp'; then $(CYGPATH_W) 'engineprivate.cpp'; else $(CYGPATH_W) '$(srcdir)/engineprivate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-engineprivate.Tpo $(DEPDIR)/libengine_a-engineprivate.Po
#	$(AM_V_CXX)source='engineprivate.cpp' object='libengine_a-engineprivate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-engineprivate.obj `if test -f 'engineprivate.cpp'; then $(CYGPATH_W) 'engineprivate.cpp'; else $(CYGPATH_W) '$(srcdir)/engineprivate.cpp'; fi`

libengine_a-externalipresolver.o: externalipresolver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-externalipresolver.o -MD -MP -MF $(DEPDIR)/libengine_a-externalipresolver.Tpo -c -o libengine_a-externalipresolver.o `test -f 'externalipresolver.cpp' || echo '$(srcdir)/'`externalipresolver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-externalipresolver.Tpo $(DEPDIR)/libengine_a-externalipresolver.Po
#	$(AM_V_CXX)source='externalipresolver.cpp' object='libengine_a-externalipresolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-externalipresolver.o `test -f 'externalipresolver.cpp' || echo '$(srcdir)/'`externalipresolver.cpp

libengine_a-externalipresolver.obj: externalipresolver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-externalipresolver.obj -MD -MP -MF $(DEPDIR)/libengine_a-externalipresolver.Tpo -c -o libengine_a-externalipresolver.obj `if test -f 'externalipresolver.cpp'; then $(CYGPATH_W) 'externalipresolver.cpp'; else $(CYGPATH_W) '$(srcdir)/externalipresolver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-externalipresolver.Tpo $(DEPDIR)/libengine_a-externalipresolver.Po
#	$(AM_V_CXX)source='externalipresolver.cpp' object='libengine_a-externalipresolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-externalipresolver.obj `if test -f 'externalipresolver.cpp'; then $(CYGPATH_W) 'externalipresolver.cpp'; else $(CYGPATH_W) '$(srcdir)/externalipresolver.cpp'; fi`

libengine_a-FileZillaEngine.o: FileZillaEngine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-FileZillaEngine.o -MD -MP -MF $(DEPDIR)/libengine_a-FileZillaEngine.Tpo -c -o libengine_a-FileZillaEngine.o `test -f 'FileZillaEngine.cpp' || echo '$(srcdir)/'`FileZillaEngine.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-FileZillaEngine.Tpo $(DEPDIR)/libengine_a-FileZillaEngine.Po
#	$(AM_V_CXX)source='FileZillaEngine.cpp' object='libengine_a-FileZillaEngine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-FileZillaEngine.o `test -f 'FileZillaEngine.cpp' || echo '$(srcdir)/'`FileZillaEngine.cpp

libengine_a-FileZillaEngine.obj: FileZillaEngine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-FileZillaEngine.obj -MD -MP -MF $(DEPDIR)/libengine_a-FileZillaEngine.Tpo -c -o libengine_a-FileZillaEngine.obj `if test -f 'FileZillaEngine.cpp'; then $(CYGPATH_W) 'FileZillaEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/FileZillaEngine.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-FileZillaEngine.Tpo $(DEPDIR)/libengine_a-FileZillaEngine.Po
#	$(AM_V_CXX)source='FileZillaEngine.cpp' object='libengine_a-FileZillaEngine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-FileZillaEngine.obj `if test -f 'FileZillaEngine.cpp'; then $(CYGPATH_W) 'FileZillaEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/FileZillaEngine.cpp'; fi`

libengine_a-ftpcontrolsocket.o: ftpcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-ftpcontrolsocket.o -MD -MP -MF $(DEPDIR)/libengine_a-ftpcontrolsocket.Tpo -c -o libengine_a-ftpcontrolsocket.o `test -f 'ftpcontrolsocket.cpp' || echo '$(srcdir)/'`ftpcontrolsocket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-ftpcontrolsocket.Tpo $(DEPDIR)/libengine_a-ftpcontrolsocket.Po
#	$(AM_V_CXX)source='ftpcontrolsocket.cpp' object='libengine_a-ftpcontrolsocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-ftpcontrolsocket.o `test -f 'ftpcontrolsocket.cpp' || echo '$(srcdir)/'`ftpcontrolsocket.cpp

libengine_a-ftpcontrolsocket.obj: ftpcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-ftpcontrolsocket.obj -MD -MP -MF $(DEPDIR)/libengine_a-ftpcontrolsocket.Tpo -c -o libengine_a-ftpcontrolsocket.obj `if test -f 'ftpcontrolsocket.cpp'; then $(CYGPATH_W) 'ftpcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/ftpcontrolsocket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-ftpcontrolsocket.Tpo $(DEPDIR)/libengine_a-ftpcontrolsocket.Po
#	$(AM_V_CXX)source='ftpcontrolsocket.cpp' object='libengine_a-ftpcontrolsocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-ftpcontrolsocket.obj `if test -f 'ftpcontrolsocket.cpp'; then $(CYGPATH_W) 'ftpcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/ftpcontrolsocket.cpp'; fi`

libengine_a-httpcontrolsocket.o: httpcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-httpcontrolsocket.o -MD -MP -MF $(DEPDIR)/libengine_a-httpcontrolsocket.Tpo -c -o libengine_a-httpcontrolsocket.o `test -f 'httpcontrolsocket.cpp' || echo '$(srcdir)/'`httpcontrolsocket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-httpcontrolsocket.Tpo $(DEPDIR)/libengine_a-httpcontrolsocket.Po
#	$(AM_V_CXX)source='httpcontrolsocket.cpp' object='libengine_a-httpcontrolsocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-httpcontrolsocket.o `test -f 'httpcontrolsocket.cpp' || echo '$(srcdir)/'`httpcontrolsocket.cpp

libengine_a-httpcontrolsocket.obj: httpcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-httpcontrolsocket.obj -MD -MP -MF $(DEPDIR)/libengine_a-httpcontrolsocket.Tpo -c -o libengine_a-httpcontrolsocket.obj `if test -f 'httpcontrolsocket.cpp'; then $(CYGPATH_W) 'httpcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/httpcontrolsocket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-httpcontrolsocket.Tpo $(DEPDIR)/libengine_a-httpcontrolsocket.Po
#	$(AM_V_CXX)source='httpcontrolsocket.cpp' object='libengine_a-httpcontrolsocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-httpcontrolsocket.obj `if test -f 'httpcontrolsocket.cpp'; then $(CYGPATH_W) 'httpcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/httpcontrolsocket.cpp'; fi`

libengine_a-iothread.o: iothread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-iothread.o -MD -MP -MF $(DEPDIR)/libengine_a-iothread.Tpo -c -o libengine_a-iothread.o `test -f 'iothread.cpp' || echo '$(srcdir)/'`iothread.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-iothread.Tpo $(DEPDIR)/libengine_a-iothread.Po
#	$(AM_V_CXX)source='iothread.cpp' object='libengine_a-iothread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-iothread.o `test -f 'iothread.cpp' || echo '$(srcdir)/'`iothread.cpp

libengine_a-iothread.obj: iothread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-iothread.obj -MD -MP -MF $(DEPDIR)/libengine_a-iothread.Tpo -c -o libengine_a-iothread.obj `if test -f 'iothread.cpp'; then $(CYGPATH_W) 'iothread.cpp'; else $(CYGPATH_W) '$(srcdir)/iothread.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-iothread.Tpo $(DEPDIR)/libengine_a-iothread.Po
#	$(AM_V_CXX)source='iothread.cpp' object='libengine_a-iothread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-iothread.obj `if test -f 'iothread.cpp'; then $(CYGPATH_W) 'iothread.cpp'; else $(CYGPATH_W) '$(srcdir)/iothread.cpp'; fi`

libengine_a-local_path.o: local_path.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-local_path.o -MD -MP -MF $(DEPDIR)/libengine_a-local_path.Tpo -c -o libengine_a-local_path.o `test -f 'local_path.cpp' || echo '$(srcdir)/'`local_path.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-local_path.Tpo $(DEPDIR)/libengine_a-local_path.Po
#	$(AM_V_CXX)source='local_path.cpp' object='libengine_a-local_path.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-local_path.o `test -f 'local_path.cpp' || echo '$(srcdir)/'`local_path.cpp

libengine_a-local_path.obj: local_path.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-local_path.obj -MD -MP -MF $(DEPDIR)/libengine_a-local_path.Tpo -c -o libengine_a-local_path.obj `if test -f 'local_path.cpp'; then $(CYGPATH_W) 'local_path.cpp'; else $(CYGPATH_W) '$(srcdir)/local_path.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-local_path.Tpo $(DEPDIR)/libengine_a-local_path.Po
#	$(AM_V_CXX)source='local_path.cpp' object='libengine_a-local_path.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-local_path.obj `if test -f 'local_path.cpp'; then $(CYGPATH_W) 'local_path.cpp'; else $(CYGPATH_W) '$(srcdir)/local_path.cpp'; fi`

libengine_a-logging.o: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-logging.o -MD -MP -MF $(DEPDIR)/libengine_a-logging.Tpo -c -o libengine_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-logging.Tpo $(DEPDIR)/libengine_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libengine_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp

libengine_a-logging.obj: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-logging.obj -MD -MP -MF $(DEPDIR)/libengine_a-logging.Tpo -c -o libengine_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-logging.Tpo $(DEPDIR)/libengine_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libengine_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`

libengine_a-misc.o: misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-misc.o -MD -MP -MF $(DEPDIR)/libengine_a-misc.Tpo -c -o libengine_a-misc.o `test -f 'misc.cpp' || echo '$(srcdir)/'`misc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-misc.Tpo $(DEPDIR)/libengine_a-misc.Po
#	$(AM_V_CXX)source='misc.cpp' object='libengine_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-misc.o `test -f 'misc.cpp' || echo '$(srcdir)/'`misc.cpp

libengine_a-misc.obj: misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-misc.obj -MD -MP -MF $(DEPDIR)/libengine_a-misc.Tpo -c -o libengine_a-misc.obj `if test -f 'misc.cpp'; then $(CYGPATH_W) 'misc.cpp'; else $(CYGPATH_W) '$(srcdir)/misc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-misc.Tpo $(DEPDIR)/libengine_a-misc.Po
#	$(AM_V_CXX)source='misc.cpp' object='libengine_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-misc.obj `if test -f 'misc.cpp'; then $(CYGPATH_W) 'misc.cpp'; else $(CYGPATH_W) '$(srcdir)/misc.cpp'; fi`

libengine_a-notification.o: notification.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-notification.o -MD -MP -MF $(DEPDIR)/libengine_a-notification.Tpo -c -o libengine_a-notification.o `test -f 'notification.cpp' || echo '$(srcdir)/'`notification.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-notification.Tpo $(DEPDIR)/libengine_a-notification.Po
#	$(AM_V_CXX)source='notification.cpp' object='libengine_a-notification.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-notification.o `test -f 'notification.cpp' || echo '$(srcdir)/'`notification.cpp

libengine_a-notification.obj: notification.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-notification.obj -MD -MP -MF $(DEPDIR)/libengine_a-notification.Tpo -c -o libengine_a-notification.obj `if test -f 'notification.cpp'; then $(CYGPATH_W) 'notification.cpp'; else $(CYGPATH_W) '$(srcdir)/notification.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-notification.Tpo $(DEPDIR)/libengine_a-notification.Po
#	$(AM_V_CXX)source='notification.cpp' object='libengine_a-notification.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-notification.obj `if test -f 'notification.cpp'; then $(CYGPATH_W) 'notification.cpp'; else $(CYGPATH_W) '$(srcdir)/notification.cpp'; fi`

libengine_a-option_change_event_handler.o: option_change_event_handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-option_change_event_handler.o -MD -MP -MF $(DEPDIR)/libengine_a-option_change_event_handler.Tpo -c -o libengine_a-option_change_event_handler.o `test -f 'option_change_event_handler.cpp' || echo '$(srcdir)/'`option_change_event_handler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-option_change_event_handler.Tpo $(DEPDIR)/libengine_a-option_change_event_handler.Po
#	$(AM_V_CXX)source='option_change_event_handler.cpp' object='libengine_a-option_change_event_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-option_change_event_handler.o `test -f 'option_change_event_handler.cpp' || echo '$(srcdir)/'`option_change_event_handler.cpp

libengine_a-option_change_event_handler.obj: option_change_event_handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-option_change_event_handler.obj -MD -MP -MF $(DEPDIR)/libengine_a-option_change_event_handler.Tpo -c -o libengine_a-option_change_event_handler.obj `if test -f 'option_change_event_handler.cpp'; then $(CYGPATH_W) 'option_change_event_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/option_change_event_handler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-option_change_event_handler.Tpo $(DEPDIR)/libengine_a-option_change_event_handler.Po
#	$(AM_V_CXX)source='option_change_event_handler.cpp' object='libengine_a-option_change_event_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-option_change_event_handler.obj `if test -f 'option_change_event_handler.cpp'; then $(CYGPATH_W) 'option_change_event_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/option_change_event_handler.cpp'; fi`

libengine_a-pathcache.o: pathcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-pathcache.o -MD -MP -MF $(DEPDIR)/libengine_a-pathcache.Tpo -c -o libengine_a-pathcache.o `test -f 'pathcache.cpp' || echo '$(srcdir)/'`pathcache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-pathcache.Tpo $(DEPDIR)/libengine_a-pathcache.Po
#	$(AM_V_CXX)source='pathcache.cpp' object='libengine_a-pathcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-pathcache.o `test -f 'pathcache.cpp' || echo '$(srcdir)/'`pathcache.cpp

libengine_a-pathcache.obj: pathcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-pathcache.obj -MD -MP -MF $(DEPDIR)/libengine_a-pathcache.Tpo -c -o libengine_a-pathcache.obj `if test -f 'pathcache.cpp'; then $(CYGPATH_W) 'pathcache.cpp'; else $(CYGPATH_W) '$(srcdir)/pathcache.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-pathcache.Tpo $(DEPDIR)/libengine_a-pathcache.Po
#	$(AM_V_CXX)source='pathcache.cpp' object='libengine_a-pathcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-pathcache.obj `if test -f 'pathcache.cpp'; then $(CYGPATH_W) 'pathcache.cpp'; else $(CYGPATH_W) '$(srcdir)/pathcache.cpp'; fi`

libengine_a-proxy.o: proxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-proxy.o -MD -MP -MF $(DEPDIR)/libengine_a-proxy.Tpo -c -o libengine_a-proxy.o `test -f 'proxy.cpp' || echo '$(srcdir)/'`proxy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-proxy.Tpo $(DEPDIR)/libengine_a-proxy.Po
#	$(AM_V_CXX)source='proxy.cpp' object='libengine_a-proxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-proxy.o `test -f 'proxy.cpp' || echo '$(srcdir)/'`proxy.cpp

libengine_a-proxy.obj: proxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-proxy.obj -MD -MP -MF $(DEPDIR)/libengine_a-proxy.Tpo -c -o libengine_a-proxy.obj `if test -f 'proxy.cpp'; then $(CYGPATH_W) 'proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/proxy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-proxy.Tpo $(DEPDIR)/libengine_a-proxy.Po
#	$(AM_V_CXX)source='proxy.cpp' object='libengine_a-proxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-proxy.obj `if test -f 'proxy.cpp'; then $(CYGPATH_W) 'proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/proxy.cpp'; fi`

libengine_a-ratelimiter.o: ratelimiter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-ratelimiter.o -MD -MP -MF $(DEPDIR)/libengine_a-ratelimiter.Tpo -c -o libengine_a-ratelimiter.o `test -f 'ratelimiter.cpp' || echo '$(srcdir)/'`ratelimiter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-ratelimiter.Tpo $(DEPDIR)/libengine_a-ratelimiter.Po
#	$(AM_V_CXX)source='ratelimiter.cpp' object='libengine_a-ratelimiter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-ratelimiter.o `test -f 'ratelimiter.cpp' || echo '$(srcdir)/'`ratelimiter.cpp

libengine_a-ratelimiter.obj: ratelimiter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-ratelimiter.obj -MD -MP -MF $(DEPDIR)/libengine_a-ratelimiter.Tpo -c -o libengine_a-ratelimiter.obj `if test -f 'ratelimiter.cpp'; then $(CYGPATH_W) 'ratelimiter.cpp'; else $(CYGPATH_W) '$(srcdir)/ratelimiter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-ratelimiter.Tpo $(DEPDIR)/libengine_a-ratelimiter.Po
#	$(AM_V_CXX)source='ratelimiter.cpp' object='libengine_a-ratelimiter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-ratelimiter.obj `if test -f 'ratelimiter.cpp'; then $(CYGPATH_W) 'ratelimiter.cpp'; else $(CYGPATH_W) '$(srcdir)/ratelimiter.cpp'; fi`

libengine_a-rtt.o: rtt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-rtt.o -MD -MP -MF $(DEPDIR)/libengine_a-rtt.Tpo -c -o libengine_a-rtt.o `test -f 'rtt.cpp' || echo '$(srcdir)/'`rtt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-rtt.Tpo $(DEPDIR)/libengine_a-rtt.Po
#	$(AM_V_CXX)source='rtt.cpp' object='libengine_a-rtt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-rtt.o `test -f 'rtt.cpp' || echo '$(srcdir)/'`rtt.cpp

libengine_a-rtt.obj: rtt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-rtt.obj -MD -MP -MF $(DEPDIR)/libengine_a-rtt.Tpo -c -o libengine_a-rtt.obj `if test -f 'rtt.cpp'; then $(CYGPATH_W) 'rtt.cpp'; else $(CYGPATH_W) '$(srcdir)/rtt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-rtt.Tpo $(DEPDIR)/libengine_a-rtt.Po
#	$(AM_V_CXX)source='rtt.cpp' object='libengine_a-rtt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-rtt.obj `if test -f 'rtt.cpp'; then $(CYGPATH_W) 'rtt.cpp'; else $(CYGPATH_W) '$(srcdir)/rtt.cpp'; fi`

libengine_a-server.o: server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-server.o -MD -MP -MF $(DEPDIR)/libengine_a-server.Tpo -c -o libengine_a-server.o `test -f 'server.cpp' || echo '$(srcdir)/'`server.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-server.Tpo $(DEPDIR)/libengine_a-server.Po
#	$(AM_V_CXX)source='server.cpp' object='libengine_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-server.o `test -f 'server.cpp' || echo '$(srcdir)/'`server.cpp

libengine_a-server.obj: server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-server.obj -MD -MP -MF $(DEPDIR)/libengine_a-server.Tpo -c -o libengine_a-server.obj `if test -f 'server.cpp'; then $(CYGPATH_W) 'server.cpp'; else $(CYGPATH_W) '$(srcdir)/server.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-server.Tpo $(DEPDIR)/libengine_a-server.Po
#	$(AM_V_CXX)source='server.cpp' object='libengine_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-server.obj `if test -f 'server.cpp'; then $(CYGPATH_W) 'server.cpp'; else $(CYGPATH_W) '$(srcdir)/server.cpp'; fi`

libengine_a-serverpath.o: serverpath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-serverpath.o -MD -MP -MF $(DEPDIR)/libengine_a-serverpath.Tpo -c -o libengine_a-serverpath.o `test -f 'serverpath.cpp' || echo '$(srcdir)/'`serverpath.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-serverpath.Tpo $(DEPDIR)/libengine_a-serverpath.Po
#	$(AM_V_CXX)source='serverpath.cpp' object='libengine_a-serverpath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-serverpath.o `test -f 'serverpath.cpp' || echo '$(srcdir)/'`serverpath.cpp

libengine_a-serverpath.obj: serverpath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-serverpath.obj -MD -MP -MF $(DEPDIR)/libengine_a-serverpath.Tpo -c -o libengine_a-serverpath.obj `if test -f 'serverpath.cpp'; then $(CYGPATH_W) 'serverpath.cpp'; else $(CYGPATH_W) '$(srcdir)/serverpath.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-serverpath.Tpo $(DEPDIR)/libengine_a-serverpath.Po
#	$(AM_V_CXX)source='serverpath.cpp' object='libengine_a-serverpath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-serverpath.obj `if test -f 'serverpath.cpp'; then $(CYGPATH_W) 'serverpath.cpp'; else $(CYGPATH_W) '$(srcdir)/serverpath.cpp'; fi`

libengine_a-servercapabilities.o: servercapabilities.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-servercapabilities.o -MD -MP -MF $(DEPDIR)/libengine_a-servercapabilities.Tpo -c -o libengine_a-servercapabilities.o `test -f 'servercapabilities.cpp' || echo '$(srcdir)/'`servercapabilities.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-servercapabilities.Tpo $(DEPDIR)/libengine_a-servercapabilities.Po
#	$(AM_V_CXX)source='servercapabilities.cpp' object='libengine_a-servercapabilities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-servercapabilities.o `test -f 'servercapabilities.cpp' || echo '$(srcdir)/'`servercapabilities.cpp

libengine_a-servercapabilities.obj: servercapabilities.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-servercapabilities.obj -MD -MP -MF $(DEPDIR)/libengine_a-servercapabilities.Tpo -c -o libengine_a-servercapabilities.obj `if test -f 'servercapabilities.cpp'; then $(CYGPATH_W) 'servercapabilities.cpp'; else $(CYGPATH_W) '$(srcdir)/servercapabilities.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-servercapabilities.Tpo $(DEPDIR)/libengine_a-servercapabilities.Po
#	$(AM_V_CXX)source='servercapabilities.cpp' object='libengine_a-servercapabilities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-servercapabilities.obj `if test -f 'servercapabilities.cpp'; then $(CYGPATH_W) 'servercapabilities.cpp'; else $(CYGPATH_W) '$(srcdir)/servercapabilities.cpp'; fi`

libengine_a-sftpcontrolsocket.o: sftpcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-sftpcontrolsocket.o -MD -MP -MF $(DEPDIR)/libengine_a-sftpcontrolsocket.Tpo -c -o libengine_a-sftpcontrolsocket.o `test -f 'sftpcontrolsocket.cpp' || echo '$(srcdir)/'`sftpcontrolsocket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-sftpcontrolsocket.Tpo $(DEPDIR)/libengine_a-sftpcontrolsocket.Po
#	$(AM_V_CXX)source='sftpcontrolsocket.cpp' object='libengine_a-sftpcontrolsocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-sftpcontrolsocket.o `test -f 'sftpcontrolsocket.cpp' || echo '$(srcdir)/'`sftpcontrolsocket.cpp

libengine_a-sftpcontrolsocket.obj: sftpcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-sftpcontrolsocket.obj -MD -MP -MF $(DEPDIR)/libengine_a-sftpcontrolsocket.Tpo -c -o libengine_a-sftpcontrolsocket.obj `if test -f 'sftpcontrolsocket.cpp'; then $(CYGPATH_W) 'sftpcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/sftpcontrolsocket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-sftpcontrolsocket.Tpo $(DEPDIR)/libengine_a-sftpcontrolsocket.Po
#	$(AM_V_CXX)source='sftpcontrolsocket.cpp' object='libengine_a-sftpcontrolsocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-sftpcontrolsocket.obj `if test -f 'sftpcontrolsocket.cpp'; then $(CYGPATH_W) 'sftpcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/sftpcontrolsocket.cpp'; fi`

libengine_a-sizeformatting_base.o: sizeformatting_base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-sizeformatting_base.o -MD -MP -MF $(DEPDIR)/libengine_a-sizeformatting_base.Tpo -c -o libengine_a-sizeformatting_base.o `test -f 'sizeformatting_base.cpp' || echo '$(srcdir)/'`sizeformatting_base.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-sizeformatting_base.Tpo $(DEPDIR)/libengine_a-sizeformatting_base.Po
#	$(AM_V_CXX)source='sizeformatting_base.cpp' object='libengine_a-sizeformatting_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-sizeformatting_base.o `test -f 'sizeformatting_base.cpp' || echo '$(srcdir)/'`sizeformatting_base.cpp

libengine_a-sizeformatting_base.obj: sizeformatting_base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-sizeformatting_base.obj -MD -MP -MF $(DEPDIR)/libengine_a-sizeformatting_base.Tpo -c -o libengine_a-sizeformatting_base.obj `if test -f 'sizeformatting_base.cpp'; then $(CYGPATH_W) 'sizeformatting_base.cpp'; else $(CYGPATH_W) '$(srcdir)/sizeformatting_base.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-sizeformatting_base.Tpo $(DEPDIR)/libengine_a-sizeformatting_base.Po
#	$(AM_V_CXX)source='sizeformatting_base.cpp' object='libengine_a-sizeformatting_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-sizeformatting_base.obj `if test -f 'sizeformatting_base.cpp'; then $(CYGPATH_W) 'sizeformatting_base.cpp'; else $(CYGPATH_W) '$(srcdir)/sizeformatting_base.cpp'; fi`

libengine_a-socket.o: socket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-socket.o -MD -MP -MF $(DEPDIR)/libengine_a-socket.Tpo -c -o libengine_a-socket.o `test -f 'socket.cpp' || echo '$(srcdir)/'`socket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-socket.Tpo $(DEPDIR)/libengine_a-socket.Po
#	$(AM_V_CXX)source='socket.cpp' object='libengine_a-socket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-socket.o `test -f 'socket.cpp' || echo '$(srcdir)/'`socket.cpp

libengine_a-socket.obj: socket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-socket.obj -MD -MP -MF $(DEPDIR)/libengine_a-socket.Tpo -c -o libengine_a-socket.obj `if test -f 'socket.cpp'; then $(CYGPATH_W) 'socket.cpp'; else $(CYGPATH_W) '$(srcdir)/socket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-socket.Tpo $(DEPDIR)/libengine_a-socket.Po
#	$(AM_V_CXX)source='socket.cpp' object='libengine_a-socket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-socket.obj `if test -f 'socket.cpp'; then $(CYGPATH_W) 'socket.cpp'; else $(CYGPATH_W) '$(srcdir)/socket.cpp'; fi`

libengine_a-storjcontrolsocket.o: storjcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-storjcontrolsocket.o -MD -MP -MF $(DEPDIR)/libengine_a-storjcontrolsocket.Tpo -c -o libengine_a-storjcontrolsocket.o `test -f 'storjcontrolsocket.cpp' || echo '$(srcdir)/'`storjcontrolsocket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-storjcontrolsocket.Tpo $(DEPDIR)/libengine_a-storjcontrolsocket.Po
#	$(AM_V_CXX)source='storjcontrolsocket.cpp' object='libengine_a-storjcontrolsocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-storjcontrolsocket.o `test -f 'storjcontrolsocket.cpp' || echo '$(srcdir)/'`storjcontrolsocket.cpp

libengine_a-storjcontrolsocket.obj: storjcontrolsocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-storjcontrolsocket.obj -MD -MP -MF $(DEPDIR)/libengine_a-storjcontrolsocket.Tpo -c -o libengine_a-storjcontrolsocket.obj `if test -f 'storjcontrolsocket.cpp'; then $(CYGPATH_W) 'storjcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/storjcontrolsocket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-storjcontrolsocket.Tpo $(DEPDIR)/libengine_a-storjcontrolsocket.Po
#	$(AM_V_CXX)source='storjcontrolsocket.cpp' object='libengine_a-storjcontrolsocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-storjcontrolsocket.obj `if test -f 'storjcontrolsocket.cpp'; then $(CYGPATH_W) 'storjcontrolsocket.cpp'; else $(CYGPATH_W) '$(srcdir)/storjcontrolsocket.cpp'; fi`

libengine_a-tlssocket.o: tlssocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-tlssocket.o -MD -MP -MF $(DEPDIR)/libengine_a-tlssocket.Tpo -c -o libengine_a-tlssocket.o `test -f 'tlssocket.cpp' || echo '$(srcdir)/'`tlssocket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-tlssocket.Tpo $(DEPDIR)/libengine_a-tlssocket.Po
#	$(AM_V_CXX)source='tlssocket.cpp' object='libengine_a-tlssocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-tlssocket.o `test -f 'tlssocket.cpp' || echo '$(srcdir)/'`tlssocket.cpp

libengine_a-tlssocket.obj: tlssocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-tlssocket.obj -MD -MP -MF $(DEPDIR)/libengine_a-tlssocket.Tpo -c -o libengine_a-tlssocket.obj `if test -f 'tlssocket.cpp'; then $(CYGPATH_W) 'tlssocket.cpp'; else $(CYGPATH_W) '$(srcdir)/tlssocket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-tlssocket.Tpo $(DEPDIR)/libengine_a-tlssocket.Po
#	$(AM_V_CXX)source='tlssocket.cpp' object='libengine_a-tlssocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-tlssocket.obj `if test -f 'tlssocket.cpp'; then $(CYGPATH_W) 'tlssocket.cpp'; else $(CYGPATH_W) '$(srcdir)/tlssocket.cpp'; fi`

libengine_a-transfersocket.o: transfersocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-transfersocket.o -MD -MP -MF $(DEPDIR)/libengine_a-transfersocket.Tpo -c -o libengine_a-transfersocket.o `test -f 'transfersocket.cpp' || echo '$(srcdir)/'`transfersocket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-transfersocket.Tpo $(DEPDIR)/libengine_a-transfersocket.Po
#	$(AM_V_CXX)source='transfersocket.cpp' object='libengine_a-transfersocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-transfersocket.o `test -f 'transfersocket.cpp' || echo '$(srcdir)/'`transfersocket.cpp

libengine_a-transfersocket.obj: transfersocket.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-transfersocket.obj -MD -MP -MF $(DEPDIR)/libengine_a-transfersocket.Tpo -c -o libengine_a-transfersocket.obj `if test -f 'transfersocket.cpp'; then $(CYGPATH_W) 'transfersocket.cpp'; else $(CYGPATH_W) '$(srcdir)/transfersocket.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-transfersocket.Tpo $(DEPDIR)/libengine_a-transfersocket.Po
#	$(AM_V_CXX)source='transfersocket.cpp' object='libengine_a-transfersocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-transfersocket.obj `if test -f 'transfersocket.cpp'; then $(CYGPATH_W) 'transfersocket.cpp'; else $(CYGPATH_W) '$(srcdir)/transfersocket.cpp'; fi`

libengine_a-uri.o: uri.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-uri.o -MD -MP -MF $(DEPDIR)/libengine_a-uri.Tpo -c -o libengine_a-uri.o `test -f 'uri.cpp' || echo '$(srcdir)/'`uri.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-uri.Tpo $(DEPDIR)/libengine_a-uri.Po
#	$(AM_V_CXX)source='uri.cpp' object='libengine_a-uri.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-uri.o `test -f 'uri.cpp' || echo '$(srcdir)/'`uri.cpp

libengine_a-uri.obj: uri.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT libengine_a-uri.obj -MD -MP -MF $(DEPDIR)/libengine_a-uri.Tpo -c -o libengine_a-uri.obj `if test -f 'uri.cpp'; then $(CYGPATH_W) 'uri.cpp'; else $(CYGPATH_W) '$(srcdir)/uri.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libengine_a-uri.Tpo $(DEPDIR)/libengine_a-uri.Po
#	$(AM_V_CXX)source='uri.cpp' object='libengine_a-uri.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -c -o libengine_a-uri.obj `if test -f 'uri.cpp'; then $(CYGPATH_W) 'uri.cpp'; else $(CYGPATH_W) '$(srcdir)/uri.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(DATA) $(HEADERS)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


#include ./$(DEPDIR)/filezilla.Po

#filezilla.h.gch: filezilla.h
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libengine_a_CPPFLAGS) $(CPPFLAGS) $(libengine_a_CXXFLAGS) $(CXXFLAGS) -MT $@ -MD -MP -MF "$(DEPDIR)/filezilla.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/filezilla.Tpo" "$(DEPDIR)/filezilla.Po"; else rm -f "$(DEPDIR)/filezilla.Tpo"; exit 1; fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
